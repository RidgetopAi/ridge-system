{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "query",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -240,
        -200
      ],
      "id": "ceed6177-e023-43fc-b962-8ecc04e01666",
      "name": "Webhook",
      "webhookId": "524d6835-cf7a-4e42-9980-4974bb0196f3"
    },
    {
      "parameters": {
        "jsCode": "// Extract data from the webhook BODY\nconst message = $input.first().json.body.message || 'No message received';\nconst history = $input.first().json.body.conversationHistory || [];\nconst userId = $input.first().json.body.userId || 'unknown';\nconst action = $input.first().json.body.action || 'chat';\n\n// Build full conversation context\nconst fullContext = [...history, { role: 'user', content: message }];\n\nreturn [{\n  json: {\n    messages: fullContext,\n    user_id: userId,\n    action_type: action,\n    timestamp: new Date().toISOString()\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -60,
        -200
      ],
      "id": "04fb0757-6980-4763-9c26-28cd79f713d6",
      "name": "Code"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.messages }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        120,
        -200
      ],
      "id": "03986565-3d75-40aa-b460-b63a061cb602",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"message\": \"{{$json.message}}\",\n  \"timestamp\": \"{{$json.timestamp}}\",\n  \"sender\": \"ai\",\n  \"success\": true\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.2,
      "position": [
        580,
        -200
      ],
      "id": "f86f9d7d-205c-4645-984e-987384d564e7",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "qwen2.5-coder-7b-instruct",
          "mode": "list",
          "cachedResultName": "qwen2.5-coder-7b-instruct"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        140,
        0
      ],
      "id": "8de59e7b-4f49-4d19-a862-87b220774e9e",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "FkkZRReX8yeMbDCJ",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Get the AI response - now it comes as \"output\"\nconst aiResponse = $input.first().json;\nlet messageText = '';\n\nif (aiResponse.output) {\n  messageText = aiResponse.output;\n} else if (aiResponse.response && aiResponse.response.generations && aiResponse.response.generations[0] && aiResponse.response.generations[0][0]) {\n  messageText = aiResponse.response.generations[0][0].text;\n} else {\n  messageText = 'AI response received but format unknown';\n}\n\nreturn [{\n  json: {\n    message: messageText.trim(),\n    timestamp: new Date().toISOString(),\n    sender: 'ai',\n    success: true\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        420,
        -200
      ],
      "id": "14461316-565a-4acc-914e-b668622c2729",
      "name": "Code1"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook": {
      "main": [
        []
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "b8915617-93bd-4d90-ab0a-594ae2ee4256",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "e371af7ca804b3d1a45933b2f84d1a2358e5a413b702b8b6ed46120a9ea041f8"
  },
  "id": "XBr5in8OgbHZ7R2i",
  "tags": []
}